import React, { useState } from "react";
import { refundByReceipt } from "../../api/payment/paymentApi";
import { fetchReceiptBySaleId } from "../../api/receipt/receiptApi";
import "../../styles/payment/RefundPage.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
    faSearch,
    faRotateLeft,
    faFileInvoice,
    faClipboardList,
    faCheckCircle,
    faExclamationTriangle,
} from "@fortawesome/free-solid-svg-icons";

const RefundPage: React.FC = () => {
    const [saleId, setSaleId] = useState("");
    const [reason, setReason] = useState("");
    const [loading, setLoading] = useState(false);
    const [receipt, setReceipt] = useState<any>(null);
    const [result, setResult] = useState<any>(null);

    // üîç ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å saleId
    const handleSearchReceipt = async () => {
        if (!saleId.trim()) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢");
            return;
        }

        setLoading(true);
        setResult(null);
        setReceipt(null);

        const res = await fetchReceiptBySaleId(saleId.trim());
        if (res.success && res.receipt) {
            setReceipt(res.receipt);
        } else {
            alert(res.message || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ô‡∏µ‡πâ");
        }

        setLoading(false);
    };

    // üîÅ ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏° receipt._id
    const handleRefund = async () => {
        if (!receipt?._id) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
            return;
        }

        setLoading(true);
        const res = await refundByReceipt(receipt._id, reason);
        setResult(res);
        setLoading(false);
    };

    return (
        <div className="refund-page">
            <div className="refund-card">
                <h2 className="refund-header">
                    <FontAwesomeIcon icon={faRotateLeft} /> ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (Refund by Sale ID)
                </h2>

                {/* üîç ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
                <div className="refund-form">
                    <div className="form-group">
                        <label>
                            <FontAwesomeIcon icon={faFileInvoice} /> ‡πÄ‡∏•‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ (Sale ID)
                        </label>
                        <input
                            type="text"
                            value={saleId}
                            onChange={(e) => setSaleId(e.target.value)}
                            placeholder="‡πÄ‡∏ä‡πà‡∏ô 1760259866997"
                            className="input-field"
                        />
                    </div>

                    <button
                        className="btn-search"
                        onClick={handleSearchReceipt}
                        disabled={loading}
                    >
                        <FontAwesomeIcon icon={faSearch} />{" "}
                        {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..." : "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"}
                    </button>
                </div>

                {/* üßæ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
                {receipt && (
                    <div className="receipt-section fade-in">
                        <h3>üßæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö</h3>
                        <div className="receipt-info">
                            <p>
                                <strong>‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô:</strong> {receipt.employeeName}
                            </p>
                            <p>
                                <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢:</strong>{" "}
                                {new Date(receipt.timestamp).toLocaleString()}
                            </p>
                            <p>
                                <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:</strong> {receipt.paymentMethod}
                            </p>
                            <p>
                                <strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong>{" "}
                                {receipt.totalPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó
                            </p>
                        </div>

                        <table className="receipt-table">
                            <thead>
                                <tr>
                                    <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                                    <th>‡∏£‡∏≤‡∏Ñ‡∏≤</th>
                                    <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                    <th>‡∏£‡∏ß‡∏°</th>
                                </tr>
                            </thead>
                            <tbody>
                                {receipt.items.map((item: any, i: number) => (
                                    <tr key={i}>
                                        <td>{item.name}</td>
                                        <td>{item.price.toLocaleString()}</td>
                                        <td>{item.quantity}</td>
                                        <td>{item.subtotal.toLocaleString()}</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>

                        <div className="refund-reason">
                            <label>
                                <FontAwesomeIcon icon={faClipboardList} /> ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô
                                (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
                            </label>
                            <textarea
                                value={reason}
                                onChange={(e) => setReason(e.target.value)}
                                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∏‡∏î / ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏à"
                            ></textarea>
                        </div>

                        <button
                            className="btn-refund"
                            onClick={handleRefund}
                            disabled={loading}
                        >
                            {loading ? "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£..." : "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"}
                        </button>
                    </div>
                )}

                {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
                {result && (
                    <div
                        className={`refund-result ${result.success ? "success" : "error"
                            } fade-in`}
                    >
                        {result.success ? (
                            <>
                                <FontAwesomeIcon
                                    icon={faCheckCircle}
                                    className="result-icon success"
                                />
                                <h3>{result.message}</h3>
                                <div className="refund-details">
                                    <p>
                                        <strong>‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡∏∑‡∏ô:</strong>{" "}
                                        {result.data?.receipt?._id}
                                    </p>
                                    <p>
                                        <strong>‡∏¢‡∏≠‡∏î‡∏Ñ‡∏∑‡∏ô:</strong>{" "}
                                        {Math.abs(
                                            result.data?.receipt?.totalPrice || 0
                                        ).toLocaleString()}{" "}
                                        ‡∏ö‡∏≤‡∏ó
                                    </p>
                                    <p>
                                        <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô:</strong>{" "}
                                        {result.data?.receipt?.timestamp
                                            ? new Date(
                                                result.data.receipt.timestamp
                                            ).toLocaleString()
                                            : "-"}
                                    </p>
                                </div>
                            </>
                        ) : (
                            <>
                                <FontAwesomeIcon
                                    icon={faExclamationTriangle}
                                    className="result-icon error"
                                />
                                <h3>{result.message}</h3>
                            </>
                        )}
                    </div>
                )}
            </div>
        </div>
    );
};

export default RefundPage;
