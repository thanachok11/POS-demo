import React from "react";

interface Payment {
    _id: string;
    saleId: string;
    employeeName: string;
    paymentMethod: string;
    amount: number;
    status: string;
    type: string; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° field type
    createdAt: string;
}

interface PaymentTableProps {
    payments: Payment[];
    formatThaiDateTime: (date: string) => string;
    getPaymentMethodEmoji: (method: string) => string;
    getStatusEmoji: (status: string) => string;
    startIndex: number;
}

const PaymentTable: React.FC<PaymentTableProps> = ({
    payments,
    formatThaiDateTime,
    getPaymentMethodEmoji,
    getStatusEmoji,
    startIndex,
}) => {
    const getTypeEmoji = (type: string) => {
        switch (type) {
            case "SALE":
                return "üü¢ ‡∏Ç‡∏≤‡∏¢";
            case "REFUND":
                return "üî¥ ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô";
            default:
                return "‚ö™ ‡∏≠‡∏∑‡πà‡∏ô‡πÜ";
        }
    };

    return (
        <table className="payment-table">
            <thead>
                <tr className="payment-header-row">
                    <th className="payment-header-cell">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                    <th className="payment-header-cell">‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢</th>
                    <th className="payment-header-cell">‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</th>
                    <th className="payment-header-cell">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                    <th className="payment-header-cell">‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</th>
                    <th className="payment-header-cell">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</th>
                    <th className="payment-header-cell">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                    <th className="payment-header-cell">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                </tr>
            </thead>
            <tbody>
                {payments.length > 0 ? (
                    payments.map((payment, index) => (
                        <tr key={payment._id} className="payment-row">
                            <td className="payment-cell">{startIndex + index + 1}</td>
                            <td className="payment-cell">{payment.saleId}</td>
                            <td className="payment-cell">{payment.employeeName}</td>
                            <td className="payment-cell">{getTypeEmoji(payment.type)}</td> {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á type */}
                            <td className="payment-cell">
                                {getPaymentMethodEmoji(payment.paymentMethod)}
                            </td>
                            <td
                                className="payment-cell"
                                style={{ color: payment.amount < 0 ? "red" : "green" }}
                            >
                                {payment.amount.toLocaleString()} ‡∏ö‡∏≤‡∏ó
                            </td>
                            <td className="payment-cell">{getStatusEmoji(payment.status)}</td>
                            <td className="payment-cell">
                                {formatThaiDateTime(payment.createdAt)}
                            </td>
                        </tr>
                    ))
                ) : (
                    <tr>
                        <td colSpan={8} className="payment-no-data">
                            ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                        </td>
                    </tr>
                )}
            </tbody>
        </table>
    );
};

export default PaymentTable;
