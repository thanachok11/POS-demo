import React from "react";

interface Props {
    stockData: any;
    suppliers: any[];
    warehouses: any[];
    handleInputChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;
    handleUnitChange: (index: number, field: "name" | "totalQuantity", value: any) => void;
    addUnit: () => void;
    removeUnit: (index: number) => void;
    setShowWarehouseModal: (open: boolean) => void;
}
interface Unit {
    name: string;
    totalQuantity: number;
}

const StockFormSection: React.FC<Props> = ({
    stockData,
    suppliers,
    warehouses,
    handleInputChange,
    handleUnitChange,
    addUnit,
    removeUnit,
    setShowWarehouseModal
}) => {
    return (
        <div className="add-product-form-column">
            <h3>‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>

            {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:</label>
                <input
                    type="number"
                    name="totalQuantity"
                    value={stockData.totalQuantity}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                    min="0"
                    required
                />
            </div>

            {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏∏‡∏ô */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏∏‡∏ô:</label>
                <input
                    type="number"
                    name="costPrice"
                    value={stockData.costPrice}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                    min="0"
                />
            </div>

            {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢ */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢:</label>
                <input
                    type="number"
                    name="salePrice"
                    value={stockData.salePrice}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                    min="0"
                />
            </div>

            {/* ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
            {/* ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</label>

                {stockData.units?.map((u: Unit, index: number) => (
                    <div key={index} className="unit-row">
                        {/* üß© ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å input ‚Üí select */}
                        <select
                            value={u.name}
                            onChange={(e) => handleUnitChange(index, "name", e.target.value)}
                            className="add-product-form-input small"
                        >
                            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢ --</option>
                            <option value="‡∏ä‡∏¥‡πâ‡∏ô">‡∏ä‡∏¥‡πâ‡∏ô</option>
                            <option value="‡∏ï‡∏±‡∏ß">‡∏ï‡∏±‡∏ß</option>
                            <option value="‡πÇ‡∏´‡∏•">‡πÇ‡∏´‡∏•</option>
                            <option value="‡πÅ‡∏û‡πá‡∏Ñ">‡πÅ‡∏û‡πá‡∏Ñ</option>
                            <option value="‡∏•‡∏±‡∏á">‡∏•‡∏±‡∏á</option>
                            <option value="‡∏Å‡∏•‡πà‡∏≠‡∏á">‡∏Å‡∏•‡πà‡∏≠‡∏á</option>
                            <option value="‡∏Ç‡∏ß‡∏î">‡∏Ç‡∏ß‡∏î</option>
                            <option value="‡∏ñ‡∏∏‡∏á">‡∏ñ‡∏∏‡∏á</option>
                            <option value="‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°">‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°</option>
                            <option value="‡∏Å‡∏£‡∏±‡∏°">‡∏Å‡∏£‡∏±‡∏°</option>
                            <option value="‡∏•‡∏¥‡∏ï‡∏£">‡∏•‡∏¥‡∏ï‡∏£</option>
                        </select>

                        {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢ */}
                        <input
                            type="number"
                            placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                            value={u.totalQuantity}
                            onChange={(e) =>
                                handleUnitChange(index, "totalQuantity", Number(e.target.value))
                            }
                            className="add-product-form-input small"
                            min="1"
                        />

                        <button
                            type="button"
                            onClick={() => removeUnit(index)}
                            className="remove-unit-btn"
                        >
                            ‚úñ
                        </button>
                    </div>
                ))}

                <button type="button" onClick={addUnit} className="add-unit-btn">
                    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏¢
                </button>
            </div>


            {/* Supplier */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏ú‡∏π‡πâ‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢:</label>
                <select
                    name="supplierId"
                    value={stockData.supplierId}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                    required
                >
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢ --</option>
                    {suppliers.map((s) => (
                        <option key={s._id} value={s._id}>
                            {s.companyName}
                        </option>
                    ))}
                </select>
            </div>

            {/* Warehouse */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏Ñ‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö:</label>
                <select
                    name="location"
                    value={stockData.location}
                    onChange={(e) => {
                        if (e.target.value === "custom") setShowWarehouseModal(true);
                        else handleInputChange(e);
                    }}
                    className="add-product-form-input"
                    required
                >
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏•‡∏±‡∏á --</option>
                    {warehouses.map((w) => (
                        <option key={w._id} value={w.name}>
                            {w.name}
                        </option>
                    ))}
                    <option value="custom">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà</option>
                </select>
            </div>

            {/* Expiry Date & Notes */}
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏:</label>
                <input
                    type="date"
                    name="expiryDate"
                    value={stockData.expiryDate}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                />
            </div>
            <div className="add-product-form-group">
                <label className="add-product-form-label">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</label>
                <textarea
                    name="notes"
                    value={stockData.notes}
                    onChange={handleInputChange}
                    className="add-product-form-input"
                    rows={3}
                />
            </div>
        </div>
    );
};

export default StockFormSection;
