import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { fetchReceiptById } from "../../api/receipt/receiptApi.ts";
import "../../styles/receipt/ReceiptDetail.css";
import React from "react";

interface Item {
    barcode: string;
    name: string;
    price: number;
    quantity: number;
    subtotal: number;
    _id: string;
}

interface Receipt {
    _id: string;
    paymentId: string;
    employeeName: string;
    items: Item[];
    totalPrice: number;
    paymentMethod: string;
    amountPaid: number;
    changeAmount: number;
    timestamp: string;
}

const formatThaiDateTime = (dateString: string) =>
    new Date(dateString).toLocaleString("th-TH", {
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "2-digit",
        minute: "2-digit",
        hour12: false,
        timeZone: "Asia/Bangkok"
    }).replace("‡∏ô.", "").trim() + " ‡∏ô.";



export default function ReceiptDetail() {
    const { paymentId } = useParams<{ paymentId?: string }>();
    const [receipt, setReceipt] = useState<Receipt | null>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        if (!paymentId) {
            setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à");
            setLoading(false);
            return;
        }

        const getReceiptDetail = async () => {
            try {
                const response = await fetchReceiptById(paymentId);
                console.log("üìå API Response:", response);
                if (response.success && response.receipt) {
                    setReceipt(response.receipt);
                } else {
                    setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à");
                }
            } catch (err) {
                setError(err instanceof Error ? err.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
            } finally {
                setLoading(false);
            }
        };

        getReceiptDetail();
    }, [paymentId]);

    const handlePrint = () => {
        window.print();
    };

    return (
        <div className="display">
        <div className="receipt-detail-container">
            <div className="receipt-detail-paper">
                <h2 className="receipt-detail-title">‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</h2>

                {loading && <p className="receipt-detail-loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>}
                {error && <p className="receipt-detail-error">{error}</p>}

                {!loading && !error && receipt && (
                    <>
                        <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> {formatThaiDateTime(receipt.timestamp)}</p>
                        <p><strong>‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô:</strong> {receipt.employeeName ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
                        <hr />

                        <table className="receipt-detail-table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                                    <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                    <th>‡∏£‡∏≤‡∏Ñ‡∏≤</th>
                                </tr>
                            </thead>
                            <tbody>
                                {receipt.items.map((item, index) => (
                                    <tr key={item._id}>
                                        <td>{index + 1}</td>
                                        <td>{item.name}</td>
                                        <td>{item.quantity}</td>
                                        <td>{item.subtotal.toLocaleString()} ‡∏ø</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>

                        <hr />
                        <p><strong>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> {receipt.totalPrice.toLocaleString()} ‡∏ø</p>
                        <p><strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:</strong> {receipt.paymentMethod}</p>
                        <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢:</strong> {receipt.amountPaid.toLocaleString()} ‡∏ø</p>
                        <p><strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</strong> {receipt.changeAmount.toLocaleString()} ‡∏ø</p>
                        <hr />

                        <p className="receipt-detail-thankyou">üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ üôè</p>
                    </>
                )}
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
            <button className="receipt-detail-print-button" onClick={handlePrint}>üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</button>
        </div>
        </div>
    );
}
