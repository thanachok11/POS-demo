// src/api/purchaseOrder/qcApi.ts
import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL || "http://localhost:5000/api";

/* =========================================================
   üß™ CREATE QC RECORD
   ‚Üí ‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ QC ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å (‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏±‡∏á)
========================================================= */
export const createQCRecord = async (formData: FormData, token: string) => {
    try {
        const res = await axios.post(`${API_URL}/qc`, formData, {
            headers: {
                "Content-Type": "multipart/form-data",
                Authorization: `Bearer ${token}`,
            },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå createQCRecord Error:", error.response?.data || error.message);
        return { success: false, message: error.response?.data?.message || "Error creating QC record" };
    }
};

/* =========================================================
   üßæ GET QC RECORDS BY BATCH NUMBER
   ‚Üí ‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• QC ‡∏Ç‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏ï‡∏ô‡∏±‡πâ‡∏ô (‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ QCInspectionPage)
========================================================= */
export const getQCByBatch = async (batchNumber: string, token: string) => {
    try {
        const res = await axios.get(`${API_URL}/qc/${batchNumber}`, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå getQCByBatch Error:", error.response?.data || error.message);
        return { success: false, message: error.response?.data?.message || "Error fetching QC data" };
    }
};

/* =========================================================
   üß∞ UPDATE QC RECORD (‡∏£‡∏≤‡∏¢‡∏•‡πá‡∏≠‡∏ï)
   ‚Üí ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà QC ‡∏ï‡∏£‡∏ß‡∏à‡∏•‡πá‡∏≠‡∏ï‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
========================================================= */
export const updateQCRecord = async (
    qcId: string,
    data: { status?: string; remarks?: string },
    token: string
) => {
    try {
        const res = await axios.put(`${API_URL}/qc/${qcId}`, data, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå updateQCRecord Error:", error.response?.data || error.message);
        return { success: false, message: error.response?.data?.message || "Error updating QC record" };
    }
};

/* =========================================================
   üì¶ UPDATE QC STATUS (‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ö PO)
   ‚Üí ‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• QC ‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ö (‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏î ‚Äú‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚Äù)
========================================================= */
export const updateQCStatus = async (
    poId: string,
    data: { qcStatus: string },
    token: string
) => {
    try {
        const res = await axios.patch(`${API_URL}/qc/update/${poId}`, data, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå updateQCStatus Error:", error.response?.data || error.message);
        return { success: false, message: error.response?.data?.message || "Error updating PO QC status" };
    }
};

/* =========================================================
   üóëÔ∏è DELETE QC RECORD
   ‚Üí ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• QC ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
========================================================= */
export const deleteQCRecord = async (qcId: string, token: string) => {
    try {
        const res = await axios.delete(`${API_URL}/qc/${qcId}`, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå deleteQCRecord Error:", error.response?.data || error.message);
        return { success: false, message: error.response?.data?.message || "Error deleting QC record" };
    }
};
