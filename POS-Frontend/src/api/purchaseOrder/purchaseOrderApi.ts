import axios from "axios";

const API_BASE_URL = import.meta.env.VITE_API_URL;

/* =========================================================
   üßæ CREATE PURCHASE ORDER
   ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà (‡∏û‡∏£‡πâ‡∏≠‡∏° lot ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô backend)
========================================================= */
export const createPurchaseOrder = async (data: any, token: string) => {
    try {
        // ‚úÖ sanitize ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        const sanitizedItems = (data.items || []).map((item: any) => ({
            productId: item.productId,
            productName: item.productName,
            barcode: item.barcode || "",
            quantity: Number(item.quantity) || 0,
            costPrice: Number(item.costPrice) || 0,
            salePrice: item.salePrice ? Number(item.salePrice) : undefined,
            threshold: Number(item.threshold) || 5,
            expiryDate: item.expiryDate || null,
            notes: item.notes || "",
            units: Array.isArray(item.units) ? item.units : [],
            batchNumber: item.batchNumber || "", // optional
        }));

        const payload = {
            purchaseOrderNumber: data.purchaseOrderNumber,
            supplierId: data.supplierId,
            supplierCompany: data.supplierCompany,
            location: data.location, // warehouseId
            invoiceNumber: data.invoiceNumber || null,
            items: sanitizedItems,
        };

        const res = await axios.post(`${API_BASE_URL}/purchase-orders`, payload, {
            headers: { Authorization: `Bearer ${token}` },
        });

        return res.data;
    } catch (error: any) {
        console.error("‚ùå createPurchaseOrder error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á PO ‡πÑ‡∏î‡πâ" };
    }
};

/* =========================================================
   üìú GET ALL PURCHASE ORDERS
========================================================= */
export const getPurchaseOrders = async (token: string) => {
    try {
        const res = await axios.get(`${API_BASE_URL}/purchase-orders`, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå getPurchaseOrders error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PO ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" };
    }
};

/* =========================================================
   üîç GET PURCHASE ORDER BY ID
========================================================= */
export const getPurchaseOrderById = async (id: string, token: string) => {
    try {
        const res = await axios.get(`${API_BASE_URL}/purchase-orders/${id}`, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå getPurchaseOrderById error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PO" };
    }
};

export const getAllPurchaseOrders = async (token: string) => {
    try {
        const res = await axios.get(`${API_BASE_URL}/purchase-orders-qc`, {
            headers: { Authorization: `Bearer ${token}` },
        });
        return res.data;
    } catch (error: any) {
        console.error("‚ùå Error fetching purchase orders:", error.message);
        return { success: false, message: "‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" };
    }
};

/* =========================================================
   ‚úÖ CONFIRM PURCHASE ORDER (‡∏£‡∏≠ QC)
========================================================= */
export const confirmPurchaseOrder = async (id: string, token: string) => {
    try {
        const res = await axios.patch(
            `${API_BASE_URL}/purchase-orders/${id}/confirm`,
            {},
            { headers: { Authorization: `Bearer ${token}` } }
        );
        return res.data;
    } catch (error: any) {
        console.error("‚ùå confirmPurchaseOrder error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô PO ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" };
    }
};


/* =========================================================
   üîÅ RETURN PURCHASE ORDER (‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
========================================================= */
export const returnPurchaseOrder = async (id: string, token: string) => {
    try {
        const res = await axios.patch(
            `${API_BASE_URL}/purchase-orders/${id}/returnPo`,
            {},
            { headers: { Authorization: `Bearer ${token}` } }
        );
        return res.data;
    } catch (error: any) {
        console.error("‚ùå returnPurchaseOrder error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" };
    }
};

/* =========================================================
   ‚ùå CANCEL PURCHASE ORDER
========================================================= */
export const cancelPurchaseOrder = async (id: string, token: string) => {
    try {
        const res = await axios.patch(
            `${API_BASE_URL}/purchase-orders/${id}/cancel`,
            {},
            { headers: { Authorization: `Bearer ${token}` } }
        );
        return res.data;
    } catch (error: any) {
        console.error("‚ùå cancelPurchaseOrder error:", error.response?.data || error.message);
        throw error.response?.data || { success: false, message: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å PO ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" };
    }
};
